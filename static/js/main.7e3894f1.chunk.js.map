{"version":3,"sources":["services/imagesApi.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","fetchImages","imageName","page","a","get","data","hits","Searchbar","state","handleNameChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","this","className","type","placeholder","onChange","autoComplete","autoFocus","Component","ImageGalleryItem","webformatURL","tags","largeImageURL","handleSelectedImage","src","alt","onClick","ImageGallery","map","id","Spinner","color","height","width","timeout","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","App","status","selectedImage","handleFormSubmit","pageIncrement","prevState","handleCloseModal","prevProps","prevImage","prevPage","nextImage","nextPage","length","scrollTo","top","documentElement","scrollHeight","behavior","console","log","message","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7e3894f1.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api';\nconst KEY = '22675248-9d53002fe5bb858ba3591edf9';\n\nconst fetchImages = async (imageName, page) => {\n  const { data } = await axios.get(\n    `/?q=${imageName}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n\n  return data.hits;\n};\n\nexport default fetchImages;\n","import React from 'react';\nimport { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Searchbar extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleNameChange = e => {\n    this.setState({ imageName: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { imageName } = this.state;\n    if (imageName.trim() === '') {\n      return toast.error(`Enter the name of the picture!`);\n    }\n\n    this.props.onSubmit(imageName);\n    this.setState({ imageName: '' });\n  };\n\n  render() {\n    const { imageName } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            placeholder=\"Search images and photos\"\n            value={imageName}\n            onChange={this.handleNameChange}\n            autoComplete=\"off\"\n            autoFocus\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  tags,\n  largeImageURL,\n  handleSelectedImage,\n}) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={tags}\n        onClick={() => handleSelectedImage(largeImageURL, tags)}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  handleSelectedImage: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nconst ImageGallery = ({ hits, handleSelectedImage }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {hits.map(({ id, webformatURL, tags, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          tags={tags}\n          largeImageURL={largeImageURL}\n          handleSelectedImage={handleSelectedImage}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }),\n  ),\n  handleSelectedImage: PropTypes.func,\n};\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"Loading\">\n      <Loader\n        type=\"Oval\"\n        color=\"#00BFFF\"\n        height={60}\n        width={60}\n        timeout={2500}\n      />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button onClick={onClick} className=\"Button\">\n      Load More\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import React from 'react';\nimport { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport fetchImages from './services/imagesApi';\n\nimport Searchbar from './components/Searchbar/Searchbar.jsx';\nimport ImageGallery from './components/ImageGallery/ImageGallery.jsx';\nimport Spinner from './components/Loader/Loader';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nclass App extends Component {\n  state = {\n    imageName: '',\n    hits: [],\n    page: 1,\n    status: 'idle',\n    selectedImage: '',\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { imageName: prevImage, page: prevPage } = prevState;\n    const { imageName: nextImage, page: nextPage } = this.state;\n\n    if (prevImage !== nextImage || prevPage !== nextPage) {\n      try {\n        const { imageName, page } = this.state;\n\n        this.setState({ status: 'pending' });\n\n        const hits = await fetchImages(imageName, page);\n        this.setState({ status: 'resolved' });\n\n        if (hits.length === 0) {\n          return toast.error(\n            `Picture with the name ${imageName} is not in the catalog`,\n          );\n        }\n\n        this.setState({ hits: [...this.state.hits, ...hits] });\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      } catch (error) {\n        this.setState({ status: 'rejected' });\n        console.log(error.message);\n      }\n    }\n  }\n\n  handleFormSubmit = imageName => {\n    this.setState({ imageName, hits: [], page: 1 });\n  };\n\n  pageIncrement = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  handleSelectedImage = (src, tags) => {\n    this.setState({ selectedImage: { src, tags } });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ selectedImage: '' });\n  };\n\n  render() {\n    const { hits, selectedImage, status } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n\n        {status === 'pending' && <Spinner />}\n\n        {status === 'resolved' && (\n          <ImageGallery\n            hits={hits}\n            handleSelectedImage={this.handleSelectedImage}\n          />\n        )}\n\n        {hits.length > 0 && <Button onClick={this.pageIncrement} />}\n\n        {selectedImage && (\n          <Modal\n            onClose={this.handleCloseModal}\n            src={selectedImage.src}\n            alt={selectedImage.tags}\n          />\n        )}\n\n        <ToastContainer autoClose={2500} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}